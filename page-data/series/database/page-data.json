{"componentChunkName":"component---src-templates-series-jsx","path":"/series/database/","result":{"data":{"posts":{"nodes":[{"excerpt":"트랜잭션(Transaction) 트랜잭션은 데이터베이스에서 수행되는 작업의 단위를 나타내며, 더 이상 쪼갤 수 없는 쿼리들의 묶음을 말한다. 트랜잭션은 ACID 특징을 따르며, ACID는 원자성(Atomicity), 일관성(Consistency), 격리성(Isolation), 지속성(Durability)을 나타낸다. ACID 특징 1. 원자성(Atomic…","fields":{"slug":"/transaction/"},"frontmatter":{"date":"February 21, 2024","update":"Feb 21, 2024","title":"Transaction","tags":["database","transaction"]}},{"excerpt":"MySQL InnoDB스토리지 엔진으로 진행된 글입니다. 인덱스란? 인덱스는 데이터베이스에서 검색 속도를 향상시키기 위해 사용되는 데이터 구조다. 지정한 컬럼들을 기준으로 메모리 영역에서 일종의 목차를 생성하는 것과 비슷하다. 이렇게 생성된 목차를 통해 검색시 전체 테이블을 스캔하는 대신 목차를 사용하여 원하는 결과를 빠르게 찾을 수 있다. 왜 인덱스를 …","fields":{"slug":"/database_index/"},"frontmatter":{"date":"March 24, 2024","update":"Mar 24, 2024","title":"인덱스와 인덱스 적용기","tags":["database","index"]}},{"excerpt":"학습 계기 콘서트 티켓 예매 프로젝트를 진행하는 중 동시에 많은 사용자가 한 자리의 좌석을 예매할 시 여러개의 같은 예약이 생성되는 문제를 발견했습니다. 콘서트 예매 상황을 생각해보면 굉장히 흔한 일인데요, '이미 선택된 좌석입니다'라는 메시지를 한번쯤은 보신 기억이 있을 거라 생각됩니다. 해당 문제를 해결하기 위해 jpa의 낙관적 락, 비관적락을 적용해…","fields":{"slug":"/ticket_reservation_concurrency/"},"frontmatter":{"date":"April 08, 2024","update":"Apr 08, 2024","title":"'이미 선택된 좌석입니다' 티켓 예매시 중복예매생성 문제","tags":["concurrency","lock","redis"]}},{"excerpt":"db 리플리케이션","fields":{"slug":"/db_replication/"},"frontmatter":{"date":"April 19, 2024","update":"Apr 19, 2024","title":"알아보고 적용하는 DB Replication","tags":["MySQL","replication"]}}]}},"pageContext":{"series":"database"}},"staticQueryHashes":[],"slicesMap":{}}