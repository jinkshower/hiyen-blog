{"componentChunkName":"component---src-templates-series-jsx","path":"/series/java/","result":{"data":{"hiyenPosts":{"nodes":[]},"otherPosts":{"nodes":[{"excerpt":"자바의 GC c,c++ 처럼 프로그래머가 직접 메모리를 관리하지 않는다는 것은 프로그래머에게 큰 장점이었음. c에서 malloc()을 한 메모리는 free()로 메모리 release가 되어야 함. 그렇지 않으면 메모리 누수(동적으로 할당한 메모리를 해제하지 않아 사용 가능 메모리가 줄어드는 현상)가 생김. Human Error를 일일히 잡았어야 함. 자바…","fields":{"slug":"/garbage_collection/"},"frontmatter":{"date":"July 13, 2024","update":"Jul 13, 2024","title":"GC와 자바의 변화과정","tags":["java","jvm","garbagecollector"]}},{"excerpt":"의존성이란 객체 지향 언어에서 A 객체가 B객체를 이용할때 A는 B를  고 표현한다.  A가 생성될 때 B가 필요할 수도 있고, A의 메서드의 파라미터로 B가 있을 수도 있다.  House객체가 Tv객체를 이용하는 예시를 들어보자 더이상 House객체가 변하지 않으면 위 코드는 문제가 없다.  하지만 House가 새로운 를 가져야 한다면? House를 테…","fields":{"slug":"/dependency_injection/"},"frontmatter":{"date":"January 11, 2024","update":"Jan 11, 2024","title":"의존성 주입(Dependency Injection)","tags":["dependency_injection","java"]}},{"excerpt":"개인 과제에서 을 적용해 코드를 개선한 기록 Builder Pattern? Effective Java는 많은 생성자 파라미터를 다루어야 할 경우 Builder Pattern을 고려하라고 말한다.  Builder Pattern은 원하는 객체를 바로 생성하는 것이 아니라, 클래스 내에 Builder라는 내부 클래스를 만든 후 Builder 클래스를 이용해 객…","fields":{"slug":"/builder_pattern/"},"frontmatter":{"date":"January 09, 2024","update":"Jan 09, 2024","title":"Builder Pattern으로 코드 개선하기","tags":["builder_pattern","java"]}},{"excerpt":"정적 팩토리 메서드란? Java에서는   연산자를 이용하여 클래스의 인스턴스를 생성하는 것 외에  메서드를 사용하여 인스턴스를 반환 받는 기법이 있다. 간단한 예시로 사용방법을 알아 보자.  이  클래스는 두개의 변수를 받는 생성자를 가지고 있다.  여기에  를 추가함으로써 인스턴스를 반환 받는 다른  를  생성하는 기법이라고 할 수 있다.  정적팩토리 …","fields":{"slug":"/staticfactorymethod/"},"frontmatter":{"date":"December 24, 2023","update":"Dec 24, 2023","title":"정적 팩토리 메서드, 언제 쓸까?","tags":["java","staticfactorymethod"]}}]}},"pageContext":{"series":"java"}},"staticQueryHashes":[],"slicesMap":{}}