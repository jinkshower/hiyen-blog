{"componentChunkName":"component---src-pages-index-jsx","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Hiyen"}},"allMarkdownRemark":{"group":[{"fieldValue":"acceptancetest","totalCount":1},{"fieldValue":"algorithms","totalCount":1},{"fieldValue":"argumentresolver","totalCount":1},{"fieldValue":"builder_pattern","totalCount":1},{"fieldValue":"cache","totalCount":1},{"fieldValue":"ci/cd","totalCount":1},{"fieldValue":"container","totalCount":1},{"fieldValue":"cookie","totalCount":1},{"fieldValue":"cooperation","totalCount":1},{"fieldValue":"database","totalCount":2},{"fieldValue":"dependency_injection","totalCount":1},{"fieldValue":"designpattern","totalCount":1},{"fieldValue":"exception","totalCount":1},{"fieldValue":"exceptionhandler","totalCount":1},{"fieldValue":"gatsby","totalCount":1},{"fieldValue":"github_pages","totalCount":1},{"fieldValue":"githubactions","totalCount":1},{"fieldValue":"http","totalCount":2},{"fieldValue":"index","totalCount":1},{"fieldValue":"ioc","totalCount":1},{"fieldValue":"java","totalCount":3},{"fieldValue":"jdbc","totalCount":1},{"fieldValue":"jpa","totalCount":2},{"fieldValue":"operating_system","totalCount":1},{"fieldValue":"pagination","totalCount":1},{"fieldValue":"process","totalCount":1},{"fieldValue":"querydsl","totalCount":2},{"fieldValue":"retrospective","totalCount":2},{"fieldValue":"session","totalCount":1},{"fieldValue":"slicetest","totalCount":1},{"fieldValue":"spring","totalCount":7},{"fieldValue":"staticfactorymethod","totalCount":1},{"fieldValue":"team assignment","totalCount":1},{"fieldValue":"testing","totalCount":3},{"fieldValue":"testisolation","totalCount":1},{"fieldValue":"thread","totalCount":1},{"fieldValue":"transaction","totalCount":1},{"fieldValue":"union_find","totalCount":1}],"nodes":[{"excerpt":"MySQL InnoDB스토리지 엔진으로 진행된 글입니다. 인덱스란? 인덱스는 데이터베이스에서 검색 속도를 향상시키기 위해 사용되는 데이터 구조다. 지정한 컬럼들을 기준으로 메모리 영역에서 일종의 목차를 생성하는 것과 비슷하다. 이렇게 생성된 목차를 통해 검색시 전체 테이블을 스캔하는 대신 목차를 사용하여 원하는 결과를 빠르게 찾을 수 있다. 왜 인덱스를 …","fields":{"slug":"/database_index/"},"frontmatter":{"date":"March 24, 2024","update":"Mar 24, 2024","title":"인덱스와 인덱스 적용기","description":"인덱스를 학습하고 적용해본 기록","tags":["database","index"]}},{"excerpt":"문제를 해결한 코드링크 페이징 처리의 필요성 성능: 대량의 데이터를 한 번에 로드하면 메모리 부족이나 느린 쿼리 실행으로 인해 성능이 저하될 수 있다. 페이징 처리를 사용하면 사용자가 필요로 하는 작은 일부 데이터만 로드하여 성능을 향상시킬 수 있다. 사용자 경험: 사용자가 대량의 데이터를 한 번에 볼 필요는 없으며, 보통은 페이지별로, 특히 최근기록 위…","fields":{"slug":"/pagination_fetchjoin/"},"frontmatter":{"date":"March 14, 2024","update":"Mar 14, 2024","title":"Spring Data JPA의 페이징처리와 fetch join시의 문제점","description":"Spring Data Jpa의 페이지네이션과 이와 관련될 수 있는 문제 해결","tags":["jpa","querydsl","pagination"]}},{"excerpt":"리팩토링 과제 중 검색기능을 Querydsl로 개선하면서 만난 N+1문제를 해결한 기록 코드링크 검색기능 jpa에 대한 학습이 부족하던 떄, 과제에서 검색기능을 만든 경험이 있다. (서비스 호출메서드 생략) SearchFilter를 전략패턴과 어댑터패턴을 활용하여 필터 기능을 구현한 코드였다.\n그렇게 나쁜 코드는 아니지만 단점이 많은 코드라는 생각이 들었…","fields":{"slug":"/querydsl_nplusone/"},"frontmatter":{"date":"March 10, 2024","update":"Mar 10, 2024","title":"Querydsl과 JPA에서의 N+1문제","description":"검색기능을 Querydsl로 개선하면서 만난 N+1문제를 해결한 기록 ","tags":["jpa","querydsl"]}},{"excerpt":"완성된 코드는 링크에서 볼 수 있습니다. (글의 코드와 조금 다른 면이 있을 수 있습니다) @SpringBootTest와 @Transactional @Transactional을 어노테이션 자체에서 포함하고 있는 @DataJpaTest와 달리 @SpringBootTest는 @Transactional을 가지고 있지 않다. 따라서 트랜잭션-롤백 환경을 @Spr…","fields":{"slug":"/sprintboottest_isolation/"},"frontmatter":{"date":"March 04, 2024","update":"Mar 10, 2024","title":"@SpringBootTest와 테스트격리","description":"테스트 격리를 위한 여정","tags":["spring","testing","testisolation"]}},{"excerpt":"팀 프로젝트를 진행하면서 Github Actions를 통해 테스트 자동화 환경을 구축한 기록 코드 보러가기 학습 계기 팀프로젝트를 진행하면서 팀원들끼리 테스트 코드를 작성했지만, 이를 PR에서 확인할 수 있는 방법이 없었다.  물론 팀원들을 믿고 있지만,  나조차도 급할때는 테스트를 돌리는 걸 까먹고 push를 한 기억도 있기 때문이다..  Github …","fields":{"slug":"/githubaction_automated_test/"},"frontmatter":{"date":"March 01, 2024","update":"Mar 01, 2024","title":"Github Actions 를 통한 테스트 자동화 구축","description":"팀 프로젝트를 진행하면서 Github Actions를 통해 테스트 자동화 환경을 구축한 기록","tags":["ci/cd","githubactions"]}},{"excerpt":"인수테스트 에서 이어지는 글입니다. Slice Test Slice Test는 레이어별로 잘라서 레이어를 하나의 단위로 보는 테스트이다. 왜 Slice Test를 해야 하는가? 개별 레이어의 검증\nSlice Test를 통해 각 레이어를 독립적으로 테스트할 수 있다. \n즉, 테스트가 깨진다면 어디를 고쳐야할 지에 대해 빠른 피드백을 받을 수 있다. 레이어간 …","fields":{"slug":"/sprint_test_strategy/"},"frontmatter":{"date":"February 25, 2024","update":"Feb 25, 2024","title":"Slice Test","description":"스프링 테스트 전략에 대한 기록","tags":["spring","slicetest","testing"]}},{"excerpt":"트랜잭션(Transaction) 트랜잭션은 데이터베이스에서 수행되는 작업의 단위를 나타내며, 더 이상 쪼갤 수 없는 쿼리들의 묶음을 말한다. 트랜잭션은 ACID 특징을 따르며, ACID는 원자성(Atomicity), 일관성(Consistency), 격리성(Isolation), 지속성(Durability)을 나타낸다. ACID 특징 1. 원자성(Atomic…","fields":{"slug":"/transaction/"},"frontmatter":{"date":"February 21, 2024","update":"Feb 21, 2024","title":"Transaction","description":"트랜잭션과 ACID특징","tags":["database","transaction"]}},{"excerpt":"프로젝트 기간(2024.02.07 - 2024.02.15) 완성 레포지토리 해당 프로젝트를 진행하며 느낀 점에 대한 기록  지켜야 할 것은 문서로 남기기 첫 협업 이후 의 중요성을 깨달았고 이번 프로젝트에서는 '이걸 지켜주세요' 라고 말하는게 아니라 지켜야할 것은 문서로 작성하기로 했다.  코드 컨벤션을 IDE에 적용, 설정하기 위한 레퍼런스를 공유했고,…","fields":{"slug":"/second_coop/"},"frontmatter":{"date":"February 15, 2024","update":"Feb 15, 2024","title":"두번째 협업 회고","description":"프로젝트 회고","tags":["cooperation","retrospective"]}},{"excerpt":"HTTP 통신의 특징 쿠키와 세션에 대해 이야기하기 전에 이들이 필요한 배경에 대해 말하려면 Http통신의 특징에 대해 이야기해봐야 한다. \n클라이언트와 서버간 tcp/ip 통신을 계-속 이어나간다면, 그리고 다수의 클라이언트의 통신이 발생하는 상황이라면 서버의 자원은 남아나지 않을 것이다. 이에 따라 응답 이후 바로 접속을 종료하는 HTTP 1.0, 일…","fields":{"slug":"/cookie_session/"},"frontmatter":{"date":"February 10, 2024","update":"Feb 10, 2024","title":"쿠키와 세션","description":"쿠키와 세션 알아보기","tags":["http","cookie","session"]}},{"excerpt":"인수 테스트란 무엇일까? 알아보고 적용해본 인수테스트  학습 계기 개인 과제 중 테스트에 관련해 튜터님께 피드백을 받게 되었다\n\n이와 관련해 고민과 검색을 하다  라는 키워드를 찾아내게 되었다.  인수테스트 인수테스트(Acceptance Test)란 소프트웨어 테스팅 기법 중 하나로 소프트웨어의 수용성을 테스트하는 기법이다. 인수테스트를 통해 비즈니스 요…","fields":{"slug":"/acceptance_test/"},"frontmatter":{"date":"February 04, 2024","update":"Feb 04, 2024","title":"인수 테스트(Acceptance Test)","description":"인수 테스트란 무엇일까? 알아보고 적용해본 인수테스트 ","tags":["spring","acceptancetest","testing"]}},{"excerpt":"개인과제를 진행하며 ArgumentResolver를 추가하여 코드를 개선한 기록 과제에서 만난 문제 개인 과제에서 밑과 같은 코드를 작성하게 되었다. Jwt토큰을 헤더에 넣는 방식으로 로그인 인증처리를 하고 있는데, 할일을 등록하기 위해서는 토큰 인증이 필요하고 request에서 헤더를 뽑아내서 토큰을 인증하고 인증이 통과하면 로직을 실행해야 하는 메서드…","fields":{"slug":"/argumentresolver/"},"frontmatter":{"date":"February 02, 2024","update":"Feb 02, 2024","title":"ArgumentResolver추가로 코드 개선하기","description":"개인과제를 진행하며 ArgumentResolver를 추가하여 코드를 개선한 기록","tags":["spring","argumentresolver"]}},{"excerpt":"JDBC Template는 어떻게 생겨났을까? JDBC코드를 개선하며 살펴보는 기록 JDBC template가 있기 전 간단하게 users 테이블에 User를 저장하고 삭제하는 \bUserDao 메서드들을 JDBC로 작성해봤다\nDataSource는 클래스를 주입받아 사용하고 있다. 자원을 쓰는 부분을 모두 null 체크를 하고 반환해줘야 하기 때문에 try…","fields":{"slug":"/jdbc_template/"},"frontmatter":{"date":"January 29, 2024","update":"Jan 29, 2024","title":"JDBC 에서 JDBC Template","description":"JDBC Template는 어떻게 생겨났을까? JDBC코드를 개선하며 살펴보는 기록","tags":["spring","jdbc","designpattern"]}},{"excerpt":"개인과제를 진행하며 Spring의 AOP 예외 처리로 코드를 개선한 기록. 과제에서 마주한 문제 개인 과제를 진행하는 도중 Entity를 수정할때 비밀번호가 다를 경우 예외를 던지는 코드를 작성하게 되었다. 이 애플리케이션이 Java로 돌아가는 커맨드라인 프로그램이었다면 종료되었을 것이다. 하지만 Spring에서 별다른 예외처리를 하지 않고 그냥 thro…","fields":{"slug":"/spring_exception/"},"frontmatter":{"date":"January 24, 2024","update":"Jan 24, 2024","title":"AOP를 통한 Spring 예외처리","description":"Spring의 AOP 예외 처리로 코드를 개선한 기록","tags":["spring","exception","exceptionhandler"]}},{"excerpt":"의존성 주입(DI)포스팅에서 이어지는 내용입니다. Inversion of Control (제어의 역전) 이란? 객체의 컨트롤이나 프로그램의 일정부분을 프레임워크의 컨테이너으로 옮기는 소프트웨어 설계의 원리를 뜻한다. \n이 원리는 여러가지 디자인 패턴(전략 패턴, 서비스 로케이터 패턴, 팩토리 패턴)으로 실현될 수 있고 특히 의존성 주입(DI)로 가장 두드…","fields":{"slug":"/ioc_container/"},"frontmatter":{"date":"January 20, 2024","update":"Jan 20, 2024","title":"IoC와 스프링 컨테이너","description":"IoC컨테이너란 무엇일까?","tags":["spring","ioc","container"]}},{"excerpt":"Preface 혼자 개발 공부를 하다 처음으로 팀으로 개발을 해보는 경험을 하게 되었다. \n자바로 캠프 관리 커맨드라인 프로그램을 만드는 Tiny, Tiny 프로젝트였지만 이 과정에서 개발을 같이 한다는 것이 무엇인지 많은 것을 깨닫게 되어서 글로 기록하고 싶어졌다.  의견 모으기 팀원들도 협업으로 개발을 해본 경험이 없었기 때문에 리더인 나의 역할이 막…","fields":{"slug":"/first_team_assignment/"},"frontmatter":{"date":"January 17, 2024","update":"Jan 17, 2024","title":"첫 팀 과제 회고","description":"첫 협업의 트러블 슈팅 기록","tags":["team assignment","retrospective"]}},{"excerpt":"Algorithms 강의를 들으며 공부한 기록 Union Find 두 원소가 같은 집합내에 있는지 확인할때 사용하는 알고리즘이다.\nDynamic connectiviy의 자료구조 중 그래프에 edge가 추가되기만 하는 구조(Incremental connectivity) 에서 사용할 수 있다.   로 p와 q를 같은 집합으로 만들고\n로 p의 루트를 찾거나 로…","fields":{"slug":"/union_find/"},"frontmatter":{"date":"January 14, 2024","update":"Jan 14, 2024","title":"Union Find","description":"알고리즘 공부 기록","tags":["algorithms","union_find"]}},{"excerpt":"의존성이란 객체 지향 언어에서 A 객체가 B객체를 이용할때 A는 B를  고 표현한다.  A가 생성될 때 B가 필요할 수도 있고, A의 메서드의 파라미터로 B가 있을 수도 있다.  House객체가 Tv객체를 이용하는 예시를 들어보자 더이상 House객체가 변하지 않으면 위 코드는 문제가 없다.  하지만 House가 새로운 를 가져야 한다면? House를 테…","fields":{"slug":"/dependency_injection/"},"frontmatter":{"date":"January 11, 2024","update":"Jan 11, 2024","title":"의존성 주입(Dependency Injection)","description":"의존성과 의존성 주입","tags":["dependency_injection","java"]}},{"excerpt":"개인 과제에서 을 적용해 코드를 개선한 기록 Builder Pattern? Effective Java는 많은 생성자 파라미터를 다루어야 할 경우 Builder Pattern을 고려하라고 말한다.  Builder Pattern은 원하는 객체를 바로 생성하는 것이 아니라, 클래스 내에 Builder라는 내부 클래스를 만든 후 Builder 클래스를 이용해 객…","fields":{"slug":"/builder_pattern/"},"frontmatter":{"date":"January 09, 2024","update":"Jan 09, 2024","title":"Builder Pattern으로 코드 개선하기","description":"Builder Pattern을 적용해 코드를 개선한 기록","tags":["builder_pattern","java"]}},{"excerpt":"'모든 개발자를 위한 HTTP'강의를 수강한 학습 기록 캐시란? 컴퓨터과학분야에서 데이터나 값을 미리 복사해 놓는 임시장소를 의미한다\nCPU에서 캐시메모리는 CPU, 메모리 사이에 위치하여 자주 쓰이는 데이터를 임시로 저장하여 둘 사이의 거리에 따른 접근시간을 줄이는데 사용된다.  캐시는 다양한 종류가 있지만 웹에서의 캐시도 CPU의 캐시 메모리와 비슷하…","fields":{"slug":"/http_cache/"},"frontmatter":{"date":"January 03, 2024","update":"Jan 03, 2024","title":"웹 서비스 캐시","description":"캐시 공부기록","tags":["http","cache"]}},{"excerpt":"'혼자 공부하는 시스템구조&운영체제'를 읽고 공부한 내용 프로세스 Process? Program? 우리는 흔히  라고 말한다.\n이는 '보조기억장치에 있는 데이터 뭉치'인 을  '메모리에 적재하고 cpu가 실행'하여 화 한다와 같은 말이다.  PCB Process Control Block 모든 프로세스는 CPU를 사용해야 하지만 CPU의 자원은 한정적이다.…","fields":{"slug":"/process_thread/"},"frontmatter":{"date":"December 28, 2023","update":"Dec 30, 2023","title":"프로세스와 스레드","description":"프로세스,스레드 공부 기록","tags":["process","thread","operating_system"]}},{"excerpt":"Gatsby로 Github pages 개인 블로그 만들기 TIL을 적는 블로그와 기술블로그를 분리하고 싶어서 따로 웹사이트 만들 방법을 찾다가 github pages과 연동하여 손쉽게 웹사이트를 만들 수 있는 SSG 프레임워크를 찾게 되었다. 여러가지가 있지만 가장 많이 쓰이는 것들은  과  이다.  처음에는 로 웹사이트를 만들었지만 몇 가지 고치고 싶은…","fields":{"slug":"/gatsby_website/"},"frontmatter":{"date":"December 26, 2023","update":"Dec 26, 2023","title":"Gatsby와 Github Pages로 개인 블로그 만들기","description":"개인 블로그 만들기 기록","tags":["gatsby","github_pages"]}},{"excerpt":"정적 팩토리 메서드란? Java에서는   연산자를 이용하여 클래스의 인스턴스를 생성하는 것 외에  메서드를 사용하여 인스턴스를 반환 받는 기법이 있다. 간단한 예시로 사용방법을 알아 보자.  이  클래스는 두개의 변수를 받는 생성자를 가지고 있다.  여기에  를 추가함으로써 인스턴스를 반환 받는 다른  를  생성하는 기법이라고 할 수 있다.  정적팩토리 …","fields":{"slug":"/staticfactorymethod/"},"frontmatter":{"date":"December 24, 2023","update":"Dec 24, 2023","title":"정적 팩토리 메서드, 언제 쓸까?","description":"정적 팩토리 메서드를 언제 쓰면 좋을까?","tags":["java","staticfactorymethod"]}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}